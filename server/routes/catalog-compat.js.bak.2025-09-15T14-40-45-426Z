
const DB = require("../db");
async function q(sql, params=[]){
  try { return await DB.query(sql, params); } catch(e1) {
    if (sql.includes("?")){ let i=1; const pg=sql.replace(/\?/g, _=>"$"+(i++)); return await DB.query(pg, params); }
    throw e1;
  }
}
module.exports = (app) => {
  app.get("/api/categories", async (req,res)=>{
    try{
      const r = await q("SELECT id, name, slug FROM categories ORDER BY name ASC", []);
      res.json({ categories: r.rows || r });
    } catch {
      try{
        const r = await q("SELECT DISTINCT category as name FROM products WHERE category IS NOT NULL ORDER BY category ASC", []);
        const rows = (r.rows||r).map((x,i)=>({ id:x.id||i+1, name:x.name||x.category, slug:String(x.name||"").toLowerCase().replace(/\s+/g,'-') }));
        res.json({ categories: rows });
      } catch(e){ res.json({ categories: [] }); }
    }
  });
  app.get("/api/menu/products", async (req,res)=>{
    const cat = req.query.category;
    if (!cat) return res.json({ products: [] });
    const sqls = [
      ["SELECT id, title, name, image, price, unit_price, cost, category_id, category FROM products WHERE category_id = ? OR category = ? ORDER BY id DESC LIMIT 200", [cat,cat]],
      ["SELECT id, title, name, image, price, unit_price, cost, category_id, category FROM products WHERE category_id = $1 OR category = $2 ORDER BY id DESC LIMIT 200", [cat,cat]],
    ];
    for (const [sql,params] of sqls){
      try{ const r=await q(sql, params); return res.json({ products: r.rows||r||[] }); }catch{}
    }
    res.json({ products: [] });
  });
};